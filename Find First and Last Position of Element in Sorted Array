class Solution {
    
public:
    void findFirst(vector<int> nums,int target,int& first){
        int l=0,h=nums.size()-1,m;
        while(l<=h){
            m=(l+h)/2;
            if(nums[m]==target)
                {
                first=m;
                h=m-1;
                
            }
            else if(nums[m]>target)
                h=m-1;
            else l=m+1;
            
        }
    }
    void findLast(vector<int> nums,int target,int& last){

        int l=0,h=nums.size()-1,m;

        while(l<=h){

            m=(l+h)/2;

            if(nums[m]==target)

                {

                last=m;

                l=m+1;

                

            }

            else if(nums[m]>target)

                h=m-1;

            else l=m+1;

            

        }

    }
    
    vector<int> searchRange(vector<int>& nums, int target) {
        vector<int> ans;
        int first=-1,last=-1;
        findFirst(nums,target,first);
        findLast(nums,target,last);
        ans.push_back(first);
       ans.push_back(last);
        return ans;
       
    }
};
