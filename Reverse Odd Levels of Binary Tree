/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
        int lvl=0,size;
        queue<pair<TreeNode*,int>> q;
        stack<int> s;
        TreeNode* tmp;
        q.push({root,0});
        
        while(!q.empty()){
            
            int tmp1, lvl;
            tmp=q.front().first;
            lvl=q.front().second;
            q.pop();
            if(!(lvl%2) && tmp->left && tmp->right){
                //store in stack
               s.push(tmp->left->val);
                s.push(tmp->right->val);
                
                
                
                
            }
            
            if(lvl%2){
                tmp->val=s.top();
                s.pop();
                  
            }
           
            
            if(tmp->left) q.push({tmp->left,lvl+1});
            if(tmp->right) q.push({tmp->right,lvl+1});
            
            
        }
        return root;
    }
};
