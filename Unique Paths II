class Solution {
public:
    //going from n-1,m-1 to 0,0 (goal)
    //originally can go right or down but acc. to recursion going left or up
    //can do the original way as well...it's just cuz of the recursion n-1,m-1 to 0,0
    
    
    int path(int i,int j, vector<vector<int>> grid,vector<vector<int>>& dp){
        
        if(i<0 || j<0) return 0;
        if(grid[i][j]==1) return 0;
         if(!i && !j) return 1;
        
        if(dp[i][j]!=-1) return dp[i][j];
        
       
        
        
        
        return dp[i][j]=path(i,j-1,grid,dp)+path(i-1,j,grid,dp);
        
        
        
        
        
    }
    
    int uniquePathsWithObstacles(vector<vector<int>>& obstacleGrid) {
        
     vector<vector<int>> dp(obstacleGrid.size(),vector<int>(obstacleGrid[0].size(),-1));
        
        return path(obstacleGrid.size()-1,obstacleGrid[0].size()-1,obstacleGrid,dp);
    }
};
