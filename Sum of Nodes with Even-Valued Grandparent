/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumEvenGrandparent(TreeNode* root) {
        
        
        unordered_map<TreeNode*,TreeNode*> parent;
        queue<TreeNode*> q;
        int sum=0;
        q.push(root);
        while(!q.empty()){
            auto tmp=q.front();
            q.pop();
            TreeNode* grandP=parent[parent[tmp]];
            if( grandP && !((grandP->val)%2)) sum+=tmp->val;
            
            if(tmp->left){
                parent[tmp->left]=tmp;
                q.push(tmp->left);
            }
            if(tmp->right){
                parent[tmp->right]=tmp;
                q.push(tmp->right);
            }
            
        }
        
        return sum;
    }
};
