/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
  
public:
     void hasSum(TreeNode* root, vector<int> vec,int sum,int target,vector<vector<int>>& ans){
        if(!root) return;
        
        vec.push_back(root->val);
        sum+=root->val;
        
        hasSum(root->left,vec,sum,target,ans);
        hasSum(root->right,vec,sum,target,ans);
        if(!root->left && !root->right && sum==target) ans.push_back(vec);
        
        
    }
    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {
         vector<vector<int>> ans;
        vector<int> vec;
        int sum=0;
        hasSum(root,vec,sum, targetSum,ans);
        return ans;
    }
};
