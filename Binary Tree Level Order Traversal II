/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        queue<TreeNode*> q;
       vector<vector<int>> lvltrav;
        int size;
        
      if(!root) return lvltrav;
    
        q.push(root);
        while(!q.empty()){
            size=q.size();
            vector<int> lvl;
            while(size){
                auto tmp=q.front();
                q.pop();
                
                lvl.push_back(tmp->val);
                if(tmp->left)
                   q.push(tmp->left);
                if(tmp->right)
                    q.push(tmp->right);
                
                size--;
            }
            lvltrav.push_back(lvl);
            
        }
        
        reverse(lvltrav.begin(),lvltrav.end());
        return lvltrav;
       
    }
};
