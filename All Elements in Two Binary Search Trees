/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inOrder(TreeNode* root,vector<int>& trav){
        if(!root)
            return;
        
        inOrder(root->left,trav);
        trav.push_back(root->val);
        inOrder(root->right,trav);
        
    }
    
    vector<int> getAllElements(TreeNode* root1, TreeNode* root2) {
        
        
        vector<int> trav1;
        vector<int> trav2;
        
        inOrder(root1,trav1);
        inOrder(root2,trav2);
        
        int i=0,j=0,n=trav1.size(),m=trav2.size();
        vector<int> ans;
        
        while(i<n && j<m){
           if(trav1[i]<=trav2[j]) ans.push_back(trav1[i++]);
            else ans.push_back(trav2[j++]);
            
        }
        
        while(i<n)
            ans.push_back(trav1[i++]);
        
         while(j<m)
            ans.push_back(trav2[j++]);
        
        return ans;
        
            
        
        
        
        
        
    }
};
