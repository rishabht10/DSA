/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        vector<vector<int>> ans;
        queue<pair<TreeNode*,pair<int,int>>> q;
        map<int,map<int,multiset<int>>> mpp;
        TreeNode* node;
        int ver,lvl;
        q.push({root,{0,0}});
        while(!q.empty()){
            auto temp=q.front();
            q.pop();
            node=temp.first;
            ver=temp.second.second;
            lvl=temp.second.first;
            mpp[ver][lvl].insert(node->val);
             if(node->left)
                 q.push({node->left,{lvl+1,ver-1}});
            if(node->right)
                 q.push({node->right,{lvl+1,ver+1}});
        }
        
        for(auto it1:mpp){
            vector<int> vec;
            for( auto it2:it1.second)
                vec.insert(vec.end(),it2.second.begin(),it2.second.end());
            
            ans.push_back(vec);
            
        }
        return ans;
                 
                 
            
            
            
            
        }
                
        
    
};
