/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<TreeNode*> helper(int start, int end){
      
        if(start>end) 
        return vector<TreeNode*>(1,NULL);
        
        
        int i;
        vector<TreeNode*> ans;
        vector<TreeNode*> left;
        vector<TreeNode*> right;
        for(i=start;i<=end;i++){
          left=helper(start,i-1);
           right=helper(i+1,end);
            
         for(auto itl:left){
             for(auto itr:right){
                 TreeNode* root=new TreeNode(i);
             root->left=itl;
                 root->right=itr;
              ans.push_back(root);
                 
             }
         }
             
            
        }
        return ans;
        
        
    }
    vector<TreeNode*> generateTrees(int n) {
        return helper(1,n);
    }
};
