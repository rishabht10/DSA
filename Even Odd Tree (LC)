/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    bool isEvenOddTree(TreeNode* root) {
        int lvl=0;
        int size,prev;
       
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty()){
            size=q.size();
          
            prev=-1;
            while(size){
                auto tmp=q.front();
                q.pop();
                if(lvl){
                    if(lvl%2){
                        if(prev==-1){
                            if(tmp->val%2) return false;
                            prev=tmp->val;
                        }
                        else if(prev<=tmp->val || tmp->val%2)  return false;
                                   
                    }
                    else{
                        if(prev==-1){
                            if(tmp->val%2==0) return false;
                            prev=tmp->val;
                        }
                        else if(prev>=tmp->val || tmp->val%2==0)  return false;   
                            
                    }
          
                    prev=tmp->val;
                    
                }
                else if(tmp->val%2==0) return false;
                
                if(tmp->left) q.push(tmp->left);
                if(tmp->right) q.push(tmp->right);
                size--;
              
            }
            lvl++;
        }
        return true;
    }
};
