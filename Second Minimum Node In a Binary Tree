/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void preOrder(TreeNode* root, set<int>& st){
        if(!root) return;
        
        st.insert(root->val);
        
        preOrder(root->left,st);
        preOrder(root->right,st);
        
        
    }
    
    
    int findSecondMinimumValue(TreeNode* root) {
        set<int> st;
        preOrder(root,st);
        
        
        auto it=st.begin();
        it++;
        
        if(st.size()==1) return -1;
        return *it;
        
    }
};
