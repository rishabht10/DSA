class Solution {
public:
    bool interleaving(int ind1, int ind2, int ind3,string s1, string s2, string s3, vector<vector<vector<int>>>& dp){
        
        if(ind3==s3.size()){
            if(ind2==s2.size() && ind1==s1.size()) return true;
            return false;
        }
        if(dp[ind1][ind2][ind3]!=-1) return dp[ind1][ind2][ind3];
        char c1,c2;
        if(ind1<s1.size()) c1=s1[ind1];
        if(ind2<s2.size()) c2=s2[ind2];
        bool ans=false;
        if(c1==s3[ind3]){
            if(interleaving(ind1+1,ind2,ind3+1,s1,s2,s3,dp)) ans=true;
        }
        if(c2==s3[ind3]){
            if(interleaving(ind1,ind2+1,ind3+1,s1,s2,s3,dp)) ans=true;
        }
        
        return dp[ind1][ind2][ind3]=ans;
        
        
    }
    bool isInterleave(string s1, string s2, string s3) {
        vector<vector<vector<int>>> dp(s1.size()+1,vector<vector<int>>(s2.size()+1,vector<int>(s3.size()+1,-1)));
        return interleaving(0,0,0,s1,s2,s3,dp);
    }
};
