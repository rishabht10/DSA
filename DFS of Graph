class Solution {
  public:
    // Function to return a list containing the DFS traversal of the graph.
    void DFS(vector<int>& vis, vector<int> adj[],vector<int>& traversal,int start){
        traversal.push_back(start);
        vis[start]=1;
        for(auto it:adj[start])
            if(!vis[it]) DFS(vis,adj,traversal,it);
        
        
    }
    
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        vector<int> vis(V,0);
        vector<int> ans;
        
        DFS(vis,adj,ans,0);
        return ans;
        
        
    }
};
