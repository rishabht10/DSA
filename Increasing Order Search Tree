/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
public:
    
    TreeNode* makeBST(TreeNode* root,int val){
        
        if(!root) return new TreeNode(val);
        
        if(val>root->val) root->right=makeBST(root->right,val);
        if(val<root->val) root->left=makeBST(root->left,val);
        
        return root;
        
    }
    
    
    void inorder(TreeNode* root, TreeNode*& rootskew){
        
        if(!root) return  ;
        
        inorder(root->left,rootskew);
        rootskew=makeBST(rootskew, root->val);
        inorder(root->right,rootskew);
        
        // return rootskew;
        
    }
    
    
    TreeNode* increasingBST(TreeNode* root) {
        TreeNode* rootskew=NULL;
        inorder(root,rootskew);
       return rootskew;
        
    }
};
