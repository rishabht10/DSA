class Solution {
public:
    int longestAlternatingSubarray(vector<int>& nums, int threshold) {
        
        int maxi=INT_MIN;
        
        int len=0,i,j;
        
        //if(nums.size()==2 && nums[1]%2==0 && nums[1] <=threshold) maxi=1;
      //  if(nums.size()==1 && nums[0]%2==0 && nums[0]<=threshold) maxi=1;
        //else maxi=0;
        
      //  if(nums.size()==1 && nums[0]%2==0 && nums[0]<=threshold)
            //return 1;
        
        

        
        for(i=0;i<nums.size();i++){
             len=0;
            if(nums[i]%2==0 && i!=nums.size()-1 && nums[i]<=threshold ){
                len++;
                for(j=i+1;j<nums.size();j++){
                    if(len%2==0 && nums[j]%2==0 && nums[j]<=threshold) len++;
                    else if(len%2!=0 && nums[j]%2!=0 && nums[j]<=threshold) len++;
                    else{
                       
                       
                        break;
                    }
                    
                }
                }
                else if(nums[i]%2==0 && i==nums.size()-1 && nums[i]<=threshold) len++;
                
              maxi=max(maxi,len);
                
            }
            
        if(maxi==INT_MIN) return 0;
            return maxi;
            }
                
           
            
            
        
        
        
        
        
        
        
    
};
