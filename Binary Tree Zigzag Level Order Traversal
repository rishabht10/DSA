/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> zigZagTrav;
        if(root==NULL)
            return zigZagTrav;
        int size,lvl=0;
        queue<TreeNode*> q;
        TreeNode* temp;
        q.push(root);
        while(!q.empty()){
            size=q.size();
            vector<int> lvlnodes;
            while(size){
                temp=q.front();
                q.pop();
                if(temp!=NULL)
                    lvlnodes.push_back(temp->val);
                if(temp->left)
                    q.push(temp->left);
                if(temp->right)
                    q.push(temp->right);
                
                size--;
            }
            if(lvl%2==0)
            zigZagTrav.push_back(lvlnodes);
            else{
                reverse(lvlnodes.begin(),lvlnodes.end());
                zigZagTrav.push_back(lvlnodes);
        }
            
                lvl++;
            
        }
        
        return zigZagTrav;
    }
};
