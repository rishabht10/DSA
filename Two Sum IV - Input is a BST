/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void inOrder(TreeNode* root, vector<int>& trav){
    if(!root)
        return;
     
  inOrder(root->left,trav);
        trav.push_back(root->val);
        inOrder(root->right,trav);
        
        
    }
    bool findTarget(TreeNode* root, int k) {
        vector<int> trav;
    
       inOrder(root,trav);
        int i=0,j=trav.size()-1,sum;
        while(i<j){
            sum=trav[i]+trav[j];
            if(sum==k)
              return true;
            else if(sum<k)
              i++;
            else
                j--;
            
        }
        return false;
             
        
        
           
        
        
        
        
    }
};
