/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* swapPairs(ListNode* head) {
         if(!head)
         return head;
        if(!head->next) 
        return head;


        ListNode* trav1, * trav2,*tmp,*prev;
        


        trav1=head;
        trav2=trav1->next;
        
        head=head->next;
        trav1->next=trav2->next;
        trav2->next=trav1;
        tmp=trav2;
        trav2=trav1;
        trav1=tmp;
        prev=trav2;
        trav1=trav2->next;
        while(trav1 && trav1->next){

            trav2=trav1->next;

        trav1->next=trav2->next; //swapping nexts
        trav2->next=trav1;

        tmp=trav2;   //swapping travs
        trav2=trav1;
        trav1=tmp;

        prev->next=trav1; //setting prev
        prev=trav2;

        trav1=trav2->next;
        

        }

        return head;

       
        

    }
};
