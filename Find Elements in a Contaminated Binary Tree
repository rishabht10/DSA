/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class FindElements {
    
    TreeNode* ROOT=NULL;
public:
    void recoverTree(TreeNode* root, int value){
        if(!root) return;
        
        root->val=value;
        recoverTree(root->left,2*root->val+1);
         recoverTree(root->right,2*root->val+2);
        
    }
    
    void inOrder(TreeNode* root, int target, bool& ans){
        if(!root) return;
        
        inOrder(root->left,target,ans);
        
        if(root->val==target) ans=true;
        
        
         inOrder(root->right,target,ans);
        
    }
    
    FindElements(TreeNode* root) {
        recoverTree(root,0);
        ROOT=root;
        
    }
    
    bool find(int target) {
        bool ans=false;
        inOrder(ROOT,target,ans);
        return ans;
    }
};

/**
 * Your FindElements object will be instantiated and called as such:
 * FindElements* obj = new FindElements(root);
 * bool param_1 = obj->find(target);
 */
