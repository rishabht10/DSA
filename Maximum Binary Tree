/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* maxBT( vector<int> vec){
        
        if(!vec.size())
            return NULL;
        
        int maxi=INT_MIN,idx;
        
        for(int i=0;i<vec.size();i++){
            if(vec[i]>maxi){
                maxi=vec[i];
                idx=i;
            }
        }
           
        vector<int> left(vec.begin(),vec.begin()+idx);
        vector<int> right(vec.begin()+idx+1,vec.end());
        
        TreeNode* root=new TreeNode(maxi,NULL,NULL);
        
        
        root->left=maxBT(left);
        root->right=maxBT(right);
        return root;
        
    }
    
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return maxBT(nums);
    }
};
