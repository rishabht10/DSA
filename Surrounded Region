class Solution {
public:
    
    void DFS(int i, int j, vector<vector<char>> board, vector<vector<int>>& vis){
         vector<int> drow={0,0,-1,1};        vector<int> dcol={1,-1,0,0};
        int p,n=board.size(),m=board[0].size();
      
        vis[i][j]=1;
        for(p=0;p<4;p++){
      int   nrow=i+drow[p];
           int  ncol=j+dcol[p];
            
            if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && vis[nrow][ncol]==0 && board[nrow][ncol]=='O'){
              //  vis[nrow][ncol]=1;
               DFS(nrow,ncol,board,vis);
            }
                
            
        }
        
        
        
        
    }
    
    void solve(vector<vector<char>>& board) {
        int i,j;
        int n=board.size();
        int m=board[0].size();
        vector<vector<int>> vis(n,vector<int>(m,0));
        for(j=0;j<m;j++)
            {
          if(board[0][j]=='O' && vis[0][j]==0) DFS(0,j,board,vis);
              
        }
        for(j=0;j<m;j++)
            {
            if(board[n-1][j]=='O' && vis[n-1][j]==0) DFS(n-1,j,board,vis);
            }
        
        for(i=0;i<n;i++)
            {
            if(board[i][0]=='O' && vis[i][0]==0) DFS(i,0,board,vis);

          
            
            
        }
        for(i=0;i<n;i++)

            {

            if(board[i][m-1]=='O' && vis[i][m-1]==0) DFS(i,m-1,board,vis);

          

            

            

        }
        
      for(i=0;i<n;i++){
          for(j=0;j<m;j++)
              {
              if(board[i][j]=='O' && vis[i][j]==0) board[i][j]='X';
                  
              
          }
      }

          
          //  return board;
        
        
    }
};
