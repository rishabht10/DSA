/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;
    
    Node(int _val) {
        val = _val;
        next = NULL;
        random = NULL;
    }
};
*/

class Solution {
public:
    Node* copyRandomList(Node* head) {
        Node* start=NULL;
        auto curr=start;
        auto trav=head;
        
        unordered_map<Node*,Node*> mpp;
        while(trav){
            
            if(!start) {
                start=new Node(trav->val);
                curr=start;
                
                
            }
            else {
                curr->next=new Node(trav->val);
                curr=curr->next;
                
            }
            
            mpp[trav]=curr;

            trav=trav->next;
            
            
        }
        trav=head;
        auto travNew=start;
        while(trav){
            travNew->random=mpp[trav->random];
            trav=trav->next;
            travNew=travNew->next;
            
            
        }
        
        
        return start;
        
        
    }
};
