/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
    
    
public:
    void preOrder(TreeNode* root, string ans,vector<string>& ansvec){
        if(!root) return;
        
        if(ans.size()) ans+="->";
        ans+=to_string(root->val);
        
        preOrder(root->left,ans,ansvec);
       preOrder(root->right,ans,ansvec);
        
       
            if(!root->left && !root->right)
            ansvec.push_back(ans);
        
            
    }
    
    vector<string> binaryTreePaths(TreeNode* root) {
        string ans="";
        vector<string> ansvec;
        preOrder(root,ans,ansvec);
        return ansvec;
    }
};
