/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* invertTree(TreeNode* root) {
        if(root==NULL)
            return NULL;
        queue<TreeNode*> q;
        q.push(root);
        TreeNode* temp;
        TreeNode* tmproot;
        while(!q.empty()){
            tmproot=q.front();
            q.pop();
            temp=tmproot->left;
            tmproot->left=tmproot->right;
            tmproot->right=temp;
            
            if(tmproot->left)
                q.push(tmproot->left);
            if(tmproot->right)
                q.push(tmproot->right);
            
              
        }
        return root;
    }
};
