/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int widthOfBinaryTree(TreeNode* root) {
        
    if(!root)
        return 0;
        queue<pair<TreeNode*, long long>> q;
        
        q.push({root,0});
         long long size, min, idx,l,f,ans=0,i;
        TreeNode* tmp;
        while(!q.empty()){
            size=q.size();
            min=q.front().second;
            for(i=0;i<size;i++){
            tmp=q.front().first;
            idx=q.front().second-min;
                q.pop();
                if(i==0)
                    f=idx;
                if(i==size-1)
                    l=idx;
                if(tmp->left)
                    q.push({tmp->left,2*idx+1});
                
                if(tmp->right)
                  q.push({tmp->right,2*idx+2});
                
                
                
               
                }
            
            ans=max(ans,(l-f)+1);
            
        }
        return ans;
            }
        
    
};
