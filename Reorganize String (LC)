class Solution {
public:
    string reorganizeString(string s) {
        int n=s.size();
        string res=""; // we will return this string later..
        unordered_map<char,int>freq;
        for(auto ele:s){
            freq[ele]++;
        }
        for(auto ele:freq){
            int p=(n+1)/2;
            if(ele.second>p){
                return res;
            }
        }
        priority_queue<pair<int,char>>pq;
        for(auto ele:freq){
            pq.push({ele.second,ele.first});
        }
        while(pq.size()>=2){
            auto ele1=pq.top();
            pq.pop();
            auto ele2=pq.top();
            pq.pop();
            res+=ele1.second;
            res+=ele2.second;
            if(ele1.first-1>0){
                pq.push({ele1.first-1,ele1.second});
            }
            if(ele2.first-1>0){
                pq.push({ele2.first-1,ele2.second});
            }
        }
        while(!pq.empty()){
            res+=pq.top().second;
            pq.pop();
        }
        return res;
    }
};
