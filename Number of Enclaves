class Solution {
public:
    int numEnclaves(vector<vector<int>>& grid) {
        int n=grid.size();
        int m=grid[0].size();
        int i,j,nrow,ncol,p,count=0;
        vector<vector<int>> vis(n,vector<int>(m,0));
        vector<int> drow={0,0,-1,1};
        vector<int> dcol={1,-1,0,0};
        queue<pair<int,int>> q;
        
        for(i=0;i<n;i++)
        {
            if(grid[i][0]==1)
            {
                q.push({i,0});
                vis[i][0]=1;
            }   
        }
        
         for(i=0;i<n;i++)
        {
            if(grid[i][m-1]==1)
            {
                q.push({i,m-1});
                vis[i][m-1]=1;
            }   
        }
         for(j=0;j<m;j++)
        {
            if(grid[0][j]==1)
            {
                q.push({0,j});
                vis[0][j]=1;
            }   
        }
        
         for(j=0;j<m;j++)
        {
            if(grid[n-1][j]==1)
            {
                q.push({n-1,j});
                vis[n-1][j]=1;
            }   
        }
        
        while(!q.empty()){
            i=q.front().first;
            j=q.front().second;
            q.pop();
            
            for(p=0;p<4;p++){
                nrow=i+drow[p];
                ncol=j+dcol[p];
                
                if(nrow>=0 && nrow<n && ncol>=0 && ncol<m && vis[nrow][ncol]==0 && grid[nrow][ncol]==1){
                    q.push({nrow,ncol});
                    vis[nrow][ncol]=1;
                }
            }
            
               
        }
        
        for(i=0;i<n;i++){
            for(j=0;j<m;j++)
                if(grid[i][j]==1 && vis[i][j]==0) count++;
            
        }
        return count;
        
        
    }
};
