/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
   int  tilt=0;
public:
    
    int sumSubtree(TreeNode* root, int& sum){
        if(!root)
           return 0;
        
        sum+=root->val;
        sumSubtree(root->left,sum);
        sumSubtree(root->right,sum);
        return sum;
        
    }
    int findTilt(TreeNode* root) {
        if(!root)
            return 0;
        int ls=0,rs=0;
        sumSubtree(root->left,ls);
        sumSubtree(root->right,rs);
        tilt+=abs(ls-rs);
        findTilt(root->left);
        findTilt(root->right);
        return tilt;
        
    }
};
